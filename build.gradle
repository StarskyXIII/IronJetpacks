plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '1.0.14'
}

version = '1.21.1-8.0.0'
group = 'com.blakebr0.ironjetpacks'

base {
    archivesName = 'IronJetpacks'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

boolean isWorkspace = findProject(':Cucumber') != null

repositories {
    maven { url 'https://maven.blakesmods.com' }
    maven { url 'https://maven.blamejared.com' }
    maven { url 'https://maven.octo-studios.com/releases' }
    maven {
        url 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
}

neoForge {
    version = neo_version

    parchment {
        mappingsVersion = parchment_mappings_version
        minecraftVersion = parchment_minecraft_version
    }

    runs {
        client {
            client()
        }

        server {
            server()
        }

        gameTestServer {
            type = "gameTestServer"
        }

        data {
            data()

            // programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }

        configureEach {
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }
    }

    mods {
        ironjetpacks {
            sourceSet(sourceSets.main)
        }

        if (isWorkspace) {
            cucumber {
                sourceSet(project(':Cucumber').sourceSets.main)
            }
        }
    }
}

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
    if (isWorkspace) {
        implementation(project(':Cucumber')) {
            transitive = false
        }
    } else {
        implementation "com.blakebr0.cucumber:Cucumber:${cucumber_version}"
    }

    compileOnly "curse.maven:controllable-317269:${controllable_version}"
    compileOnly "curse.maven:framework-549225:${framework_version}"

    runtimeOnly "top.theillusivec4.curios:curios-neoforge:${curios_version}"
    runtimeOnly "curse.maven:jade-324717:${jade_version}"
    runtimeOnly "mezz.jei:jei-${jei_mc_version}-neoforge:${jei_version}"

    compileOnly "top.theillusivec4.curios:curios-neoforge:${curios_version}:api"
    compileOnly "mezz.jei:jei-${jei_mc_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${jei_mc_version}-neoforge-api:${jei_version}"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            mod_version: version.split('-').last(),
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact jar
        }
    }

    repositories {
        maven {
            url = 'https://maven.blakesmods.com'

            credentials {
                username = System.getenv('BLAKESMODS_MAVEN_USERNAME')
                password = System.getenv('BLAKESMODS_MAVEN_PASSWORD')
            }

            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}